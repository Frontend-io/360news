{"version":3,"sources":["container/utilities/FetchSome.js","randID.js","components/News/news.js","components/homepage/landing/landing.js","components/Category/category.js","components/newslist/list.js","container/mockNews.js","components/NewsWrap/NewsWrap.js","container/Redux/Actions/actions.js","components/homepage/home.js","components/categories/categories.js","container/utilities/fetchCategory.js","components/newsCategory/newsCategory.js","components/related/related.js","components/read/read.js","container/router/router.js","container/Redux/Reducers/newsReducer.js","container/Redux/Store/store.js","components/footer/footer.js","components/header/header.js","components/portal/modal/logger.js","components/preloader/preloader.js","App.js","serviceWorker.js","index.js"],"names":["FetchSome","items","toFetch","properties","slice","randID","alphabets","numerals","pushed","outputRand","lengthOfOutput","arguments","length","parameter","randNum","array","Math","floor","random","i","JSON","stringify","generatedNum","includes","push","map","item","console","warn","placeholderImage","News","props","newsInfo","title","summary","description","image","urlToImage","source","link","name","toLowerCase","split","join","to","style","paddingTop","className","noImage","src","alt","exclude","Landing","news","landingNews","date","Date","publishedAt","toDateString","backgroundImage","key","Category","margin","fontSize","category","borderRadius","padding","connect","state","btnColor","categories","payload","filtered","NewsWrap","newsCategories","fetchNews","keyword","dispatch","type","url","axios","get","then","response","data","catch","error","message","action","useEffect","preloader","TopBar","toUpperCase","window","scrollTo","color","borderBottom","metaData","marginLeft","prevProp","match","path","list","history","fetchCategory","index","currentCategory","params","id","useDispatch","newsCase","tag","relatedNews","parsedTitle","currentNews","useState","visibility","setVisibility","handleModal","onClick","Fragment","author","content","target","href","RouterMain","exact","component","Home","Categories","NewsCategory","Read","initialState","fetching","canLog","rootReducer","combineReducers","articles","store","createStore","applyMiddleware","thunk","Logger","Footer","Header","nav","classes","useSelector","innerWidth","setTimeout","ReactDOM","createPortal","document","getElementById","Preloader","status","App","Boolean","location","hostname","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b5fafe0.chunk.js","sourcesContent":["\r\n// Return Only specific articles from the news\r\n\r\nconst FetchSome = (items, toFetch)=>{\r\n    let properties = items.slice(0, toFetch)\r\n    return {\r\n        properties\r\n    }\r\n}\r\nexport default FetchSome\r\n","export default function randID(){\r\n\t// RandID - v 1.0\r\n\t// By - Iyobosa Jefferson Osagie\r\n\t// Twitter - @frontend_io\r\n\t// Github - @frontend-io\r\n\r\n\t// For best performance, please feed in a reasonable outputLength ::: outputLength === numbers of loops !\r\n\r\n    const alphabets = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\" , \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\r\n    const numerals = [0,1,2,3,4,5,6,7,8,9]\r\n    let pushed = [] ;\r\n    let outputRand = '';\r\n    let lengthOfOutput = 10; \r\n    \r\n    if (arguments.length > 0) {\r\n    \tlet parameter = arguments[0]\r\n    \tlengthOfOutput = parameter\r\n    }\r\n    function randNum(array){\r\n    \tconst randNum = Math.floor(Math.random() * array.length)\r\n        return (\r\n           array[randNum]\r\n        )\r\n    }\r\n\r\n    for( let i = 0; i < (lengthOfOutput - 1) ; i++){\r\n    \tJSON.stringify(i)\r\n    \tlet generatedNum = `${randNum(numerals)}-${randNum(alphabets) }` \r\n    \tif (!pushed.includes(generatedNum)) {\r\n            pushed.push(generatedNum)\r\n        }\r\n    }\r\n    pushed.map((item) =>{\r\n        return(\r\n            outputRand += `${(item)}`\r\n        )\r\n    })\r\n    switch(lengthOfOutput){\r\n    \tcase 0 :  console.warn( \"RandID warn: \", \"You have not specified a valid output length!\")\r\n    \t\tbreak;\r\n    \tcase 1 :  console.warn( \"RandID warn: \", \"Output Length must be greater than 1!\")\r\n    \t\tbreak;\r\n    \tdefault:\r\n    \t\treturn outputRand\r\n    }\r\n}\r\nexport function randNum(array){\r\n    const randNum = Math.floor(Math.random() * array.length)\r\n    return (\r\n       array[randNum]\r\n    )\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nexport const placeholderImage = \"https://nbhc.ca/sites/default/files/styles/article/public/default_images/news-default-image%402x_0.png?itok=d03WAFvJ\"\r\n\r\nexport const News = (props)=>{\r\n    const {title, description:summary, urlToImage: image, source} = props.newsInfo\r\n    const link = `/360news/categories/${source.name.toLowerCase()}/${title.split(\" \").join(\"-\").toLowerCase()}`\r\n    \r\n    return(\r\n        <Link to={link} style={{paddingTop: 10}} className=\"news\">\r\n           \r\n                { !props.noImage && \r\n                     <div className=\"img\">\r\n                        <img src={image ? image : placeholderImage} alt=\"img\" />\r\n                        <label className=\"absolute label\">{source.name}</label>\r\n                    </div>\r\n                }\r\n            <div className=\"des\">\r\n                <h4 className=\"title\">{title}</h4>\r\n                {\r\n                    props.exclude === \"description\" ? null : <p className=\"content\">\r\n                    {summary}\r\n                </p>\r\n                }\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport \"./landing.css\"\r\nimport FetchSome from '../../../container/utilities/FetchSome';\r\nimport randID, { randNum } from '../../../randID';\r\nimport { News, placeholderImage } from '../../News/news';\r\n\r\n\r\n\r\nconst Landing = (props)=>{\r\n    const news = props.news.news\r\n    // Fetch some numbers of news for the landing\r\n    const { properties } = FetchSome(news, 3)\r\n\r\n    // Get random news for the landing page\r\n    const landingNews = randNum(news)\r\n    const date = new Date(landingNews.publishedAt).toDateString()\r\n\r\n\r\n    return(\r\n        <section className=\"landing-wrap\">\r\n            <div className=\"no-wrap grid apart landing\" style={\r\n                {backgroundImage: `linear-gradient(to right, rgba(200, 0, 0, .5), rgba(0,0, 0, 0.5)), \r\n                url(${landingNews.urlToImage ? landingNews.urlToImage : placeholderImage})`}} >\r\n                <div className=\"brief\">\r\n                        <h1>{landingNews.title}</h1>\r\n                        <p>{landingNews.description}</p>\r\n                </div>\r\n                <div className=\"vendor\">\r\n                    <div className=\"vend\">\r\n                        {\r\n                            landingNews.source &&\r\n                            <h3>{landingNews.source.name}</h3>\r\n                        }\r\n                         {\r\n                            landingNews.publishedAt &&\r\n                            <p>{date}</p>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n                <div className=\"snipNews\">\r\n                   {\r\n                       properties.map(item =>{\r\n                           return(\r\n                                <News newsInfo={item} key={randID()} noImage/>\r\n                           )\r\n                       })\r\n                   }\r\n                </div>\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Landing","import React from 'react'\r\nimport \"./category.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst Category = (props)=>{\r\n    return(\r\n        <div style={{margin: \"50px 0px 10px 0px\"}} className=\"cat-wrap\">\r\n            <div className=\"divider\"></div>\r\n            <div className=\"grid apart \">\r\n                <p className=\"title\" style={{fontSize: \"20px\"}}>{props.category}</p>\r\n                <Link to={`/360news/categories/${props.category}`} \r\n                    className='padded-5 red btn' style={{borderRadius: 2, padding: \"8px 10px\"}}>All <b>{props.category}</b> News\r\n                </Link>  \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Category","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport \"./list.css\"\r\nimport Category from '../Category/category';\r\nimport LargeNews from '../LargeNews/largeNews';\r\nimport randID from '../../randID';\r\nimport { News } from \"../News/news\"\r\nimport FetchSome from '../../container/utilities/FetchSome';\r\n\r\n\r\n\r\nconst NewsList = (props)=>{\r\n\r\n    const { properties } = FetchSome( props.state)\r\n    // console.log(properties)\r\n\r\n    return(\r\n        <>\r\n            {\r\n                properties.length &&\r\n                <div className=\"newsList\">\r\n                    <div className=\"container\">\r\n                    <Category category={props.category} btnColor=\"red\"/>\r\n                        <div className=\"newsList\">\r\n                            {\r\n                                properties.map(item =>(\r\n                                    (item.source.name.toLowerCase() === props.category.toLowerCase() )  &&\r\n                                    <News newsInfo={item} key={randID()}/>\r\n                                ))\r\n                            }  \r\n                        </div>\r\n                        {/* <div className=\"large-news\">\r\n                            {\r\n                                properties.map( item =>(\r\n                                    (item.source.name.toLowerCase() === props.category.toLowerCase() ) ? \r\n                                    <LargeNews news={item} key={randID()}/> : null\r\n                                ))                   \r\n                            }\r\n                        </div>      */}\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToprops = state=>{\r\n    return {\r\n        state: state.news.news\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToprops)(NewsList)","export const categories = (payload)=>{\r\n    // Make sure there are no repetition in the categories\r\n\r\n    let filtered = []\r\n    const obj = payload.news\r\n    obj.map( item =>{\r\n        if(!filtered.includes(item.source.name) ){\r\n            filtered.push(item.source.name)\r\n        }\r\n        return 0\r\n    })\r\n    \r\n    return filtered\r\n}","import React from 'react'\r\nimport NewsList from '../newslist/list';\r\nimport { categories } from '../../container/mockNews';\r\nimport randID from '../../randID';\r\n\r\n\r\nconst NewsWrap = (props) =>{\r\n    const newsCategories = categories(props.news)\r\n\r\n    return(\r\n        \r\n        newsCategories.map( item =>{\r\n            return(\r\n                newsCategories.length > 0 ? <NewsList category={item}  key={randID()}/> : null\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default NewsWrap","import axios from \"axios\";\r\nimport { randNum } from \"../../../randID\";\r\n\r\n// News fetching init\r\nexport const fetchNewsRequest = ()=>{\r\n    return{\r\n        type: \"FETCH_NEWS_REQUEST\",\r\n    }\r\n}\r\n\r\n// Success fetching news flag\r\nexport const fetchNewsSuccess = (payload)=>{\r\n    return{\r\n        type: \"FETCH_NEWS_SUCCESS\",\r\n        payload\r\n    }\r\n}\r\n\r\n// Errror fetching news flag\r\nexport const fetchNewsFailure = (payload)=>{\r\n    return{\r\n        type: \"FETCH_NEWS_FAILURE\",\r\n        payload\r\n    }\r\n}\r\n\r\n// Async action to fetch news\r\nexport const fetchNews = (keyword)=>{\r\n\r\n    return (dispatch)=>{\r\n        // Set fetching flag to true\r\n        dispatch(fetchNewsRequest())\r\n\r\n        // Fetch news\r\n        const API_KEY = \"775be0dc079c4a25b9db299e22d3effd\"\r\n        // Randomly select a category if no query is passed\r\n        // const default_queries = ['africa', 'nigeria', 'covid-19', 'corona virus', 'programming', 'technology', 'software', 'education', 'science', 'space']\r\n        // const random_default_query = randNum(default_queries)\r\n        // const url = `https://newsapi.org/v2/everything?q=${query}&apiKey=${API_KEY}`\r\n        const url = `https://newsapi.org/v2/everything?q=${keyword}&apiKey=${API_KEY}`\r\n        \r\n        axios.get(url)\r\n        .then(response => {\r\n            // Push news data to state\r\n            const data = response.data\r\n           dispatch(fetchNewsSuccess(data))\r\n        })\r\n        .catch(error=>{\r\n            // Push message to state\r\n            const message = error.message\r\n            dispatch(fetchNewsFailure(message))\r\n        })\r\n    }\r\n}\r\n \r\nexport const clearLog = ()=>{\r\n    return{\r\n        type: \"CLEAR_MESSAGE_LOG\"\r\n    }\r\n}\r\n\r\nexport const printLog = (payload)=>{\r\n    return{\r\n        type: \"PRINT_LOG\",\r\n        payload\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport Landing from './landing/landing';\r\nimport NewsWrap from '../NewsWrap/NewsWrap';\r\nimport { fetchNews } from '../../container/Redux/Actions/actions';\r\nimport \"./home.css\"\r\n\r\n\r\nconst Home = ({dispatch,state})=>{\r\n    // Fetch news onLoad\r\n    useEffect(()=>{\r\n        dispatch(fetchNews(\"covid-19\"))\r\n    }, [])\r\n\r\n    return(\r\n        <section className=\"home\">\r\n            {\r\n                !state.preloader &&\r\n                    <>\r\n                        <Landing news={state} />\r\n                        <NewsWrap news={state} />\r\n                    </>\r\n            }\r\n           {\r\n                state.preloader && \r\n                    <div className=\"padded-20 white mat shadow grid centered-text grey-t align-c centered void\">\r\n                    <h1>OooooopS!</h1>\r\n                    <p>Sorry, but we cannot load your content at the moment</p>\r\n                    <p>Apparently, you have a <b>Network error</b> </p>\r\n                </div> \r\n           }\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        state: state.news\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        dispatch: (action)=> dispatch(action)\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)","import React, { useEffect } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"./categories.css\"\r\nimport { categories } from '../../container/mockNews';\r\nimport randID from '../../randID';\r\nimport { fetchNews } from '../../container/Redux/Actions/actions';\r\n\r\nconst Category = props=>{\r\n    \r\n    return(\r\n        <Link  to={`/360news/categories/${props.item.toLowerCase()}`} className=\"mat shadow grid apart padded-20 white segment\">\r\n            <h3>{props.item}</h3>\r\n            <p className=\"count\">{props.length}</p>\r\n        </Link>\r\n    )\r\n} \r\n\r\nexport const TopBar = (props)=>{\r\n\r\n    const title = props.title.toUpperCase()\r\n    const styles = {\r\n        color: \"#aaa\",\r\n        borderBottom: \"1.5px solid #ddd\",\r\n        fontSize: 14,\r\n    }\r\n    window.scrollTo(0, 0)\r\n    return(\r\n        <div className=\"padded-20 white top-bar\" style={styles}>\r\n            <h1> {title} </h1>\r\n            {\r\n                props.metaData && \r\n                <>\r\n                    {props.metaData[0].source.name &&\r\n                        <label className=\"red-t\">{props.metaData[0].source.name}</label>\r\n                    }\r\n                    {props.metaData[0] &&\r\n                        <span style={{marginLeft: 15}}>{new Date(props.metaData[0].publishedAt).toDateString()}</span>\r\n                    }&nbsp;\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Categories = (props)=>{\r\n   useEffect(()=>{\r\n        props.dispatch(fetchNews('nigeria'))\r\n   }, [])\r\n\r\n    const title = props.match.path.split(\"/\")[1]\r\n    const list  = categories(props.state)   \r\n\r\n    // Get length of categories\r\n    const getLength = (category)=>{\r\n        // let length = 0\r\n        // const arr = props.state\r\n        // for(let i in arr){\r\n        //     let index = arr[i]\r\n        //     let id = index.source.id ? index.source.id : index.source.name\r\n        //     if(id.toLowerCase() === category.toLowerCase()){\r\n        //        length++;\r\n        //     }\r\n        //  }\r\n        // return length\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {\r\n                list  &&\r\n                <div className=\"categories\">\r\n                    <TopBar  title={title}/>\r\n                    <div className=\"container\">\r\n                        <div className=\" tabs\">\r\n                            {\r\n                                list.map(item=>{\r\n                                    return <Category history={props.history} item={item} length={getLength(`${item}`)} key={randID()}/>\r\n                                })\r\n                            }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ( state, prevProp) =>{\r\n    return{\r\n        state: state.news,\r\n        props: prevProp\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch)=>{\r\n    return{\r\n        dispatch : (action)=>{dispatch(action)}\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories)","const fetchCategory = (state, category)=>{\r\n    let list = []\r\n    \r\n    for(let item in state ){\r\n        let index = state[item]\r\n        let id = index.source.name\r\n        if(id.toLowerCase() === category.toLowerCase()){\r\n            list.push(index)\r\n        }\r\n    }\r\n    return list\r\n}\r\nexport default fetchCategory","import React, { useEffect } from 'react'\r\nimport { connect, useDispatch, useSelector } from \"react-redux\"\r\nimport { TopBar } from '../categories/categories';\r\nimport { News } from '../News/news';\r\nimport randID from '../../randID';\r\nimport \"./newsCategory.css\"\r\nimport { fetchNews } from '../../container/Redux/Actions/actions';\r\nimport fetchCategory from '../../container/utilities/fetchCategory';\r\n\r\nconst NewsCategory = props =>{\r\n    const currentCategory = props.match.params.id\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect( ()=>{\r\n        dispatch(fetchNews(currentCategory))\r\n    }, [])\r\n\r\n    // Fetch news related to current category\r\n    const list = fetchCategory(props.state, currentCategory)\r\n   \r\n    \r\n       \r\n    return(\r\n        <>\r\n            {\r\n                list.length ? \r\n                    <div className=\"newsCategory\">\r\n                        <TopBar title={currentCategory} />\r\n                        <div className=\"container\">\r\n                            <div className=\"news-wrap\">\r\n                                {\r\n                                    list.map(item =>{\r\n                                        return(\r\n                                            <News newsInfo={item} key={randID()} /> \r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                : null\r\n                \r\n            }\r\n                \r\n            {\r\n                !list.length && \r\n                <div className=\"padded-20 grey-t full-width grid align-c  col\">\r\n                    <h3>Sorry, there are currenly no news that matches '{currentCategory}' category. </h3>\r\n                    <ul>\r\n                        <h4>Possible causes-</h4>\r\n                        <div className=\"divider\"></div>\r\n                        <li>Reload page</li>\r\n                        <div className=\"divider\"></div>\r\n                        <li>Typos in link</li>\r\n                        <div className=\"divider\"></div>\r\n                        <li>Network Error</li>\r\n                    </ul>\r\n\r\n                </div> \r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        state: state.news.news\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(NewsCategory)","import React from 'react'\r\nimport { News } from '../News/news';\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport fetchCategory from '../../container/utilities/fetchCategory';\r\nimport randID from '../../randID';\r\nimport \"./related.css\"\r\n\r\nconst Related = props=>{\r\n    const newsCase = props.metaData[0];\r\n    const tag = newsCase.source.id !== null ? newsCase.source.id : newsCase.source.name\r\n    const relatedNews = fetchCategory(props.state,tag)\r\n\r\n    return(\r\n        <div className=\"mat shadow white related\">\r\n            <div className=\"padded-10 grid align-c apart head\">\r\n                <h3 className=\"grey-t\">More from {tag} -</h3>\r\n                <span className=\"orange-t\">{relatedNews.length}</span>\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"list\">\r\n                {\r\n                    relatedNews.map(item => (\r\n                        <News exclude=\"description\" newsInfo={item} key={randID()} />\r\n                    ))\r\n                }\r\n                {\r\n                    relatedNews.length < 1 && \r\n                    <p className=\"padded-10 grey-t centered-text \">Sorry, there are currently no related News</p>\r\n                }\r\n            </div>\r\n            <Link to=\"/360news\" className=\"full-width btn\"> Return to Home</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        state: state.news.news\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Related) ","import React, { useState } from 'react' \r\nimport{ connect } from 'react-redux'\r\nimport \"./read.css\"\r\nimport { TopBar } from '../categories/categories';\r\nimport randID from '../../randID';\r\nimport Related from '../related/related';\r\n\r\nconst Read = (props)=>{\r\n    const title = props.match.params.id.split(\"-\").join(\" \")\r\n    const parsedTitle = title.split(\" \").join(\"\").split(\":\").join(\"\").split(\"?\").join(\"\").toLowerCase()\r\n    const currentNews = []\r\n\r\n    const [visibility, setVisibility] = useState(false)\r\n    \r\n    const handleModal = ()=>{\r\n        visibility === false && setVisibility(true)\r\n        visibility !== false && setVisibility(false)\r\n    }\r\n    \r\n    const findNews = (query)=>{\r\n        return query.title.split(\"-\").join(\"\").split(\" \").join(\"\").split(\":\").join(\"\").split(\"?\").join(\"\").toLowerCase()\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"read\">\r\n            {\r\n                visibility && <div onClick={handleModal} className=\"overlay\"></div>\r\n            }\r\n            <TopBar title={title} metaData={currentNews} />\r\n            <div className=\"grid read-tab container\"> \r\n                <div className=\"mat shadow paper\">\r\n                    {\r\n                        props.state.map(item =>{\r\n                            return (\r\n                                findNews(item) === parsedTitle && \r\n                                <React.Fragment  key={randID()}>\r\n                                   <span className=\"no-display\"> {currentNews.push(item)}</span>\r\n                                    <p>Author - {<span className=\"red-t\">{item.author}</span>}</p>\r\n                                    <div className=\"divider\"></div>\r\n                                    <img src={item.urlToImage} alt={item.source.name} />\r\n                                    <p>{item.content}  </p> \r\n                                    <div className=\"divider\"></div><br /><br />\r\n                                    <button onClick={handleModal} className=\"padded-20 red bordered \">Continue to {item.source.name} for full story </button>\r\n                                    {\r\n                                        visibility &&\r\n                                        <div className=\"padded-20 white goModal\">\r\n                                            <p>How do your want to open the link?</p>\r\n                                            <div onClick={handleModal} className=\"grouped grid\">\r\n                                                <a target=\"blank\" href={`${item.url}`} >Open in new tab</a>\r\n                                                <a href={`${item.url}`} >Continue </a>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Related metaData={currentNews} />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        state: state.news.news\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Read)","import React from 'react'\r\nimport {Route, Switch, Redirect } from \"react-router-dom\"\r\nimport Home from '../../components/homepage/home';\r\nimport Categories from '../../components/categories/categories';\r\nimport NewsCategory from '../../components/newsCategory/newsCategory';\r\nimport Read from '../../components/read/read';\r\n\r\nexport const RouterMain = () =>(\r\n    <>\r\n        <Switch>\r\n            <Route exact path=\"/360news\" component={ Home } />\r\n            <Route exact path=\"/360news/categories\" component={Categories} />\r\n            <Route exact path=\"/360news/categories/:id\" component={NewsCategory} />\r\n            <Route exact path=\"/360news/categories/:id/:id\" component={ Read} />\r\n            <Redirect exact path=\"*\" to={Home} />\r\n        </Switch>\r\n    </>\r\n)","\r\nconst initialState = {\r\n    news:[],\r\n    title: \"360News\",\r\n    message: \"\",\r\n    fetching: false,\r\n    canLog: false,\r\n    preloader: true\r\n}\r\n\r\n\r\n\r\n\r\nexport const NewsReducer = (state = initialState, action)=>{\r\n        \r\n    const { type, payload } = action\r\n    switch(type){\r\n        case \"FETCH_NEWS_REQUEST\":\r\n            return{\r\n                ...state,\r\n                fetching: true,\r\n                message: \"Fetching News, please wait...\",\r\n                preloader : true\r\n            }\r\n        case \"FETCH_NEWS_SUCCESS\":\r\n            return {\r\n                ...state, \r\n                news: payload.articles,\r\n                message: `Fetched ${payload.articles.length} News sucessfully!`,\r\n                fetching: false,\r\n                canLog : true,\r\n                preloader : false\r\n            }\r\n        case \"FETCH_NEWS_FAILURE\":\r\n                return {\r\n                    message: payload,\r\n                    news: [...state.news],\r\n                    fetching: false,\r\n                    title: state.title,\r\n                    canLog: true,\r\n                    preloader : false\r\n                }\r\n        case 'CLEAR_MESSAGE_LOG':\r\n            return{\r\n                ...state,\r\n                message : \"\",\r\n                canLog : false\r\n            }\r\n        case \"PRINT_LOG\":\r\n            return{\r\n                ...state,\r\n                message: payload,\r\n                canLog: true\r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\"\r\nimport { NewsReducer } from '../Reducers/newsReducer';\r\nimport thunk from \"redux-thunk\";\r\nimport Logger from 'redux-logger'\r\n\r\nconst rootReducer = combineReducers({\r\n    news: NewsReducer\r\n})\r\n\r\n\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk, Logger ))","import React from 'react'\r\nimport \"./footer.css\"\r\n\r\nconst Footer = props=>{\r\n\r\n    return(\r\n        <div className=\"col padded-20 centered-t  grey-t grey centered grid align-c footer\">\r\n            <p>All Rights Reserved</p>\r\n            <p>News360 is a News Vendor, fetching news from several News agencies around the globe</p>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Footer","import React, { useState } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\" \r\nimport { Link } from \"react-router-dom\"\r\nimport \"./header.css\";\r\nimport { printLog } from '../../container/Redux/Actions/actions';\r\n\r\nconst Header = () =>{\r\n    const [nav, setNav]= useState(false)\r\n    const status = useSelector((state)=>{\r\n        return{\r\n            state: state.news.news\r\n        }\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEvent = ()=>{\r\n        nav ? setNav(false) : setNav(true)\r\n        !status.length && dispatch(printLog(\"Sorry, you cannot do that!\")) \r\n\r\n    }\r\n\r\n\r\n    let screenSize = window.innerWidth\r\n    const classes = screenSize <= 768 ?\r\n            nav ? \r\n                \"grid apart open mobile header\" :\r\n                     \"grid apart mobile header\" :\r\n                \"grid apart header\"\r\n\r\n    return(\r\n        <header  className={classes} >\r\n            <div className=\"logo\">\r\n                <Link className=\"home\"  to=\"/360news\">360News</Link>\r\n            </div>\r\n           {/* {\r\n               status.length &&\r\n               <nav className=\"grid\">\r\n               <Link to={\"/categories/us\"} >US</Link>\r\n               <ul className=\" innerLink\">Africa\r\n                   <ul className=\"no-padding grid col drop\">\r\n                       <Link to={\"/categories/Nigeria/\"}>Nigeria</Link>\r\n                       <Link to={\"/categories/south-africa\"}>South Africa</Link>\r\n                       <Link to={\"/categories/sudan\"}>Sudan</Link>\r\n                       <Link to={\"/categories/kenya\"}>Kenya</Link>\r\n                       <Link to={\"/categories/rwanda\"}>Rwanda</Link>\r\n                   </ul>\r\n               </ul>\r\n               <ul className=\" innerLink\">Europe\r\n                   <ul className=\"no-padding grid col drop\">\r\n                       <Link to={\"/categories/italy\"}>Italy</Link>\r\n                       <Link to={\"/categories/france\"}>France</Link>\r\n                       <Link to={\"/categories/germany\"}>Germany</Link>\r\n                       <Link to={\"/categories/dublin\"}>Dublin</Link>\r\n                   </ul>\r\n               </ul>\r\n               <ul className=\" innerLink\">Asia\r\n                   <ul className=\"no-padding grid col drop\">\r\n                       <Link to={\"/categories/china\"}>China</Link>\r\n                       <Link to={\"/categories/japan\"}>Japan</Link>\r\n                       <Link to={\"/categories/korea\"}>Korea</Link>\r\n                       <Link to={\"/categories/india\"}>India</Link>\r\n                   </ul>\r\n               </ul>\r\n               <Link to={\"/categories/education\"}>Education</Link>\r\n               <Link to={\"/categories/tech\"}>Tech</Link>\r\n           </nav>\r\n           } */}\r\n           {/* {\r\n            window.innerWidth <= 768 &&\r\n            <i onClick={handleEvent} className=\"fa fa-bars\"></i>\r\n           } */}\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport \"./logger.css\"\r\nimport { clearLog } from '../../../container/Redux/Actions/actions';\r\n\r\n\r\nconst Logger = ()=>{\r\n    const state = useSelector(state=>{ \r\n        return{\r\n            state\r\n        }\r\n    })\r\n    const dispatch = useDispatch()\r\n    const { message, canLog } = state.state.news\r\n\r\n    // Clear log and hide message after 5s\r\n    if(canLog){\r\n        setTimeout(()=>{\r\n            dispatch(clearLog())\r\n        }, 5000)\r\n    }\r\n\r\n    return ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            {\r\n                message !== \"\" &&\r\n                <div className=\"align-c padded-20 grid logger\">\r\n                    <i className=\"fa fa-info-circle\"></i>\r\n                    <h3>{message}</h3>\r\n                </div>\r\n            }\r\n        </React.Fragment>,\r\n        document.getElementById(\"portal\")\r\n    )\r\n}\r\nexport default Logger","import React from 'react'\r\nimport { useSelector } from \"react-redux\"\r\nimport \"./preloader.css\"\r\n\r\n\r\nconst Preloader = () =>{\r\n    const status = useSelector((state)=>{\r\n        return{\r\n            state: state.news\r\n        }\r\n    })\r\n    \r\n\r\n    return(\r\n        <>\r\n            {\r\n                status.state.preloader &&\r\n                <div className=\"preloader\">\r\n                    <div className=\"loader\"></div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Preloader","import React from 'react';\nimport { Provider } from \"react-redux\"\nimport './App.css';\nimport './index.css'\nimport { RouterMain } from './container/router/router';\nimport { store } from './container/Redux/Store/store';\nimport Footer from './components/footer/footer';\nimport Header from './components/header/header';\nimport Logger from './components/portal/modal/logger';\nimport Preloader from './components/preloader/preloader';\n\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n        <div className=\"App\">\n          <Header />\n            <div className=\"appWrapper\">\n                <RouterMain />\n            </div>\n          <Footer />\n          <Logger />\n          <Preloader />\n        </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n   <BrowserRouter> <App /></BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}